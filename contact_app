#!/usr/bin/env bash

# help message
usage() {
cat << END
Usage:  
  (1) to add a contact 
  contact_app add -n <name> -e <email> -a <address> -p <phone number>
    
  (2) to delete a contact  
  contact_app remove -e <email>

  (3) to show contacts
  contact_app show [-option]    
    -n show name only 
    -e show email only
    -a show address only
    -p show phone number only
        
END
}

if [[ $1 == '-h' ]]; then
  usage
  exit 0
fi


case $1 in
  add)
    shift
    if [[ ! -f ./contactdb/contacts ]]; then
      if [[ ! -d ./contactdb ]]; then
        mkdir ./contactdb
      fi
      touch ./contactdb/contacts
    fi
    while getopts ":n:e:a:p:" opt; do
      case ${opt} in 
        n)
          name=$OPTARG;;
        e)
          email=$OPTARG;;
        a) 
          address=$OPTARG;;
        p)
          phone=$OPTARG;;
        :) 
          echo "Please provide an argument for $OPTARG" 1>&2
          exit 1
          ;;  
        \?) 
          echo "Invalid option: -$OPTARG" 1>&2
          exit 1
          ;;
      esac 
    done
    if [[ $OPTIND -lt 8 ]]; then
       echo "Please provide the name, email, address and phone number of the person"
       echo "Usage: $0 add -n {name} -e {email} -a {address} -p {phoneNumber}"
       exit 1
    fi
    shift $((OPTIND -1))

    echo "$name,$email,$address,$phone" >> ./contactdb/contacts
    echo "Contact saved contact for $name"
    ;;
  remove)
    shift
    if [[ $# -ne 2 ]]; then
      echo "Usage: $0 remove -e {email}"
      exit 1    
    fi
    email=$2
    while read line; do
      IFS=',' read -r -a tokens <<< "$line" 
      [[ ! ${tokens[1]} == $email ]] && echo "$line"
    done <./contactdb/contacts > temp
    mv temp ./contactdb/contacts
    ;;
  show)
    shift
    
    declare -A format 
    format[Name]="%-15s\n"
    format[Email]="%-30s\n"
    format[Address]="%-15s\n"
    format[Phone]="%-11s\n"
    format[All]="%-15s %-30s %-15s %-11s\n"

    declare -A column
    column[Name]=0
    column[Email]=1
    column[Address]=2
    column[Phone]=3

    if [[ ! -f ./contactdb/contacts ]]; then
      echo "Contact database does not exist."
      exit 1
    fi 

    case $1 in
      -n) show='Name';;
      -e) show='Email';;
      -a) show='Address';;
      -p) show='Phone';;
      '') show='All';;
      *) echo "Invalid option: $1"
         exit 1
         ;;
    esac
    
    case $show in 
      All) printf "${format[${show}]}" "Name" "Email" "Address" "Phone" ;;
      *) printf "${format[${show}]}" $show ;;
    esac  
    
    while read line; do
      IFS=',' read -r -a tokens <<< "$line"
        case $show in 
          All) printf "${format[${show}]}" "${tokens[0]}" "${tokens[1]}" "${tokens[2]}" "${tokens[3]}";;
          *) printf "${format[${show}]}" "${tokens[${column[$show]}]}" ;;
        esac
    done <./contactdb/contacts
    ;;
  *)
    usage
    exit 1
    ;; 
esac
